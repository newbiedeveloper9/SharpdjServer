// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpDj.Infrastructure;

namespace SharpDj.Infrastructure.Migrations
{
    [DbContext(typeof(ServerContext))]
    [Migration("20201019233905_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("SharpDj.Domain.Entity.ConversationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.ConversationMessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("ConversationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ConversationEntityId");

                    b.ToTable("ConversationMessages");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.LogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ConnectionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RecordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<int?>("RoomEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomEntityId");

                    b.ToTable("MediaHistories");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RoomChatMessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Color")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RoomEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RoomEntityId");

                    b.ToTable("RoomChatPosts");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RoomConfigEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChatType")
                        .HasColumnType("int");

                    b.Property<string>("LocalEnterMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalLeaveMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicEnterMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicLeaveMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomConfigs");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RoomEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ConfigEntityId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.UserAuthEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AuthenticationExpiration")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("AuthenticationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAuths");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.UserConnectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ConnectionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerPort")
                        .HasColumnType("int");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConversationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int?>("UserAuthEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationEntityId");

                    b.HasIndex("UserAuthEntityId");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.ConversationMessageEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("SharpDj.Domain.Entity.ConversationEntity", null)
                        .WithMany("Messages")
                        .HasForeignKey("ConversationEntityId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.LogEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RecordEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.RoomEntity", null)
                        .WithMany("Media")
                        .HasForeignKey("RoomEntityId");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RoomChatMessageEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("SharpDj.Domain.Entity.RoomEntity", null)
                        .WithMany("Posts")
                        .HasForeignKey("RoomEntityId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RoomEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("SharpDj.Domain.Entity.RoomConfigEntity", "ConfigEntity")
                        .WithMany()
                        .HasForeignKey("ConfigEntityId");

                    b.Navigation("User");

                    b.Navigation("ConfigEntity");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.UserConnectionEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.UserEntity", b =>
                {
                    b.HasOne("SharpDj.Domain.Entity.ConversationEntity", null)
                        .WithMany("Users")
                        .HasForeignKey("ConversationEntityId");

                    b.HasOne("SharpDj.Domain.Entity.UserAuthEntity", "UserAuthEntity")
                        .WithMany()
                        .HasForeignKey("UserAuthEntityId");

                    b.HasOne("SharpDj.Domain.Entity.UserEntity", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserEntityId");

                    b.Navigation("UserAuthEntity");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.ConversationEntity", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.RoomEntity", b =>
                {
                    b.Navigation("Media");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("SharpDj.Domain.Entity.UserEntity", b =>
                {
                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
